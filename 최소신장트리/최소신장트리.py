'''
제목: 최소 신장 트리와 관련 알고리즘을 알아보자

1) 최소 신장 트리란?
    최소 (비용) 신장 트리 = Minimum Spanning Tree = MST

    신장 트리란?
        그래프의 모든 정점을 포함하고 사이클이 없는 부분 그래프.

    최소 신장 트리란?
        신장 트리 중에서 간선의 가중치 합이 가장 적은 트리.

2) MST를 구하는 알고리즘
    크루스칼 알고리즘, 프림 알고리즘이 존재한다.

    a) 크루스칼 알고리즘 O(E * logV)
        1. 간선들을 가중치를 기준으로 오름차순 정렬한다.
        2. 간선을 하나씩 확인한다.
            해당 간선을 선택함으로써 사이클이 발생하지 않는 경우에만 간선을 선택한다.
        3. V - 1개의 간선이 선택될 때까지 반복한다. (결과적으로 V개의 정점이 선택됨)

        이때, 사이클의 발생 여부를 확인 하기 위해 '서로소 집합'을 이용하며, union-find 연산을 정의함으로써 구현할 수 있다.
            서로소 집합) 정점들은 한번에 하나의 집합(트리)에만 속한다.
            union 연산) 간선의 두 정점이 속한 집합을 하나로 합친다. (=하나의 트리로 만든다.)
            find 연산) 간선의 두 정점이 동일한 집합에 속해있는지 확인한다. (=만약 동일한 집합에 속해있다면 해당 간선을 선택했을 때 사이클이 발생하게 된다.)

    b) 프림 알고리즘 O((V + E) * logV) = O(E * logV)
        1. 시작 정점을 하나 골라 (0=가중치, 정점)의 형태로 우선순위 큐에 넣는다.
        2. 우선순위 큐에서 가중치가 가장 적은 정점을 하나 꺼낸다.
        3. 해당 정점의 주위 간선들을 가중치와 함께 우선순위 큐에 넣는다. 
        4. 우선순위 큐가 빌 때까지 2, 3번을 반복한다.

        다익스트라 알고리즘과 비슷한 방식으로 구현된다.



'''